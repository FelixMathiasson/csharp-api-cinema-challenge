// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using api_cinema_challenge.Data;

#nullable disable

namespace api_cinema_challenge.Migrations
{
    [DbContext(typeof(CinemaContext))]
    partial class CinemaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("api_cinema_challenge.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedAt");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Phone");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Updated A");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(1886),
                            Email = "john.wick@hollywoodmail.com",
                            Name = "Ragnar Sandler",
                            Phone = "(555) 123-7890",
                            UpdatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(2003)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(2030),
                            Email = "r.stone@actionstar.net",
                            Name = "Elvis Lothbrok",
                            Phone = "(555) 987-6543",
                            UpdatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(2042)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(2078),
                            Email = "stallone.sylvester@moviefan.com",
                            Name = "Oprah Mouse",
                            Phone = "(555) 246-8102",
                            UpdatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(2081)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(2085),
                            Email = "v.diesel@stuntman.com",
                            Name = "Kate Schwarzenegger",
                            Phone = "(555) 369-1470",
                            UpdatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(2088)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(2092),
                            Email = "arnold@cybermail.com",
                            Name = "Elvis Mouse",
                            Phone = "(555) 482-9357",
                            UpdatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(2095)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(2100),
                            Email = "j.bourne@spyfilms.org",
                            Name = "Donald Sandler",
                            Phone = "(555) 678-9123",
                            UpdatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(2102)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(2106),
                            Email = "bruce.willis@explosions.net",
                            Name = "Felix Mathiasson",
                            Phone = "(555) 314-1592",
                            UpdatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(2109)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(2118),
                            Email = "n.cage@thrillride.com",
                            Name = "Charles Xavier",
                            Phone = "(555) 753-9514",
                            UpdatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(2129)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(2177),
                            Email = "l.neeson@hollywoodhero.com",
                            Name = "Donald Schwarzenegger",
                            Phone = "(555) 806-4213",
                            UpdatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(2181)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(2186),
                            Email = "the.rock@adventurezone.net",
                            Name = "Neo Mouse",
                            Phone = "(555) 467-8921",
                            UpdatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(2190)
                        });
                });

            modelBuilder.Entity("api_cinema_challenge.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedAt");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Description");

                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Rating");

                    b.Property<int>("RunTimeMins")
                        .HasColumnType("integer")
                        .HasColumnName("RunTimeMins");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Title");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Updated A");

                    b.HasKey("Id");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(2199),
                            Description = "Cyborg assassin hunts future savior.",
                            Rating = "R",
                            RunTimeMins = 107,
                            Title = "The Terminator",
                            UpdatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(2204)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(2211),
                            Description = "Commandos hunted by alien warrior.",
                            Rating = "R",
                            RunTimeMins = 107,
                            Title = "Predator",
                            UpdatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(2214)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(2218),
                            Description = "Ex-soldier fights to rescue daughter.",
                            Rating = "R",
                            RunTimeMins = 90,
                            Title = "Commando",
                            UpdatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(2221)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(2225),
                            Description = "Man questions reality and identity.",
                            Rating = "R",
                            RunTimeMins = 113,
                            Title = "Total Recall",
                            UpdatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(2227)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(2231),
                            Description = "Prison break with unlikely alliance.",
                            Rating = "R",
                            RunTimeMins = 115,
                            Title = "The Escape Plan",
                            UpdatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(2265)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(2273),
                            Description = "Soldier returns to rescue POWs.",
                            Rating = "R",
                            RunTimeMins = 96,
                            Title = "Rambo: First Blood Part II",
                            UpdatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(2277)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(2280),
                            Description = "Boxer fights Soviet powerhouse.",
                            Rating = "PG",
                            RunTimeMins = 91,
                            Title = "Rocky IV",
                            UpdatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(2283)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(2287),
                            Description = "Cop battles violent crime cult.",
                            Rating = "R",
                            RunTimeMins = 87,
                            Title = "Cobra",
                            UpdatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(2290)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(2293),
                            Description = "Frozen cop versus unfrozen criminal.",
                            Rating = "R",
                            RunTimeMins = 115,
                            Title = "Demolition Man",
                            UpdatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(2296)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(2300),
                            Description = "Rescuer fights criminals on mountains.",
                            Rating = "R",
                            RunTimeMins = 113,
                            Title = "Cliffhanger",
                            UpdatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(2304)
                        });
                });

            modelBuilder.Entity("api_cinema_challenge.Models.Screening", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("MovieId");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MovieId"));

                    b.Property<int>("Capacity")
                        .HasColumnType("integer")
                        .HasColumnName("Capacity");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedAt");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ScreenNumber")
                        .HasColumnType("integer")
                        .HasColumnName("ScreenNumber");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Updated A");

                    b.Property<DateTime>("startsAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("StartsAt");

                    b.HasKey("MovieId");

                    b.ToTable("Screenings");

                    b.HasData(
                        new
                        {
                            MovieId = 1,
                            Capacity = 43,
                            CreatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(2355),
                            Id = 1,
                            ScreenNumber = 1,
                            UpdatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(2359),
                            startsAt = new DateTime(2025, 3, 21, 9, 21, 38, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            MovieId = 2,
                            Capacity = 43,
                            CreatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(2370),
                            Id = 2,
                            ScreenNumber = 2,
                            UpdatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(2373),
                            startsAt = new DateTime(2025, 3, 2, 22, 32, 47, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            MovieId = 3,
                            Capacity = 50,
                            CreatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(2380),
                            Id = 3,
                            ScreenNumber = 3,
                            UpdatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(2383),
                            startsAt = new DateTime(2025, 1, 10, 6, 32, 5, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            MovieId = 4,
                            Capacity = 46,
                            CreatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(2395),
                            Id = 4,
                            ScreenNumber = 4,
                            UpdatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(2398),
                            startsAt = new DateTime(2024, 10, 10, 13, 27, 18, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            MovieId = 5,
                            Capacity = 47,
                            CreatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(2404),
                            Id = 5,
                            ScreenNumber = 5,
                            UpdatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(2407),
                            startsAt = new DateTime(2025, 3, 15, 16, 32, 3, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            MovieId = 6,
                            Capacity = 42,
                            CreatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(2420),
                            Id = 6,
                            ScreenNumber = 6,
                            UpdatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(2423),
                            startsAt = new DateTime(2024, 11, 17, 0, 34, 1, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            MovieId = 7,
                            Capacity = 44,
                            CreatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(2430),
                            Id = 7,
                            ScreenNumber = 7,
                            UpdatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(2433),
                            startsAt = new DateTime(2025, 3, 25, 20, 33, 43, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            MovieId = 8,
                            Capacity = 35,
                            CreatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(2442),
                            Id = 8,
                            ScreenNumber = 8,
                            UpdatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(2445),
                            startsAt = new DateTime(2025, 4, 15, 20, 55, 31, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            MovieId = 9,
                            Capacity = 37,
                            CreatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(2451),
                            Id = 9,
                            ScreenNumber = 9,
                            UpdatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(2454),
                            startsAt = new DateTime(2024, 10, 28, 16, 45, 27, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            MovieId = 10,
                            Capacity = 24,
                            CreatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(2461),
                            Id = 10,
                            ScreenNumber = 10,
                            UpdatedAt = new DateTime(2024, 9, 12, 9, 36, 55, 26, DateTimeKind.Utc).AddTicks(2464),
                            startsAt = new DateTime(2025, 3, 24, 23, 5, 56, 0, DateTimeKind.Utc)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
